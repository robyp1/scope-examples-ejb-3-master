<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <parent>
        <groupId>com.bluelotussoftware</groupId>
        <artifactId>scope-examples-ejb-3-master</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.bluelotussoftware</groupId>
	<artifactId>scope-examples-ejb-3-client</artifactId>
    <packaging>war</packaging>
    <name>scope-examples-ejb-3-client</name>


    <dependencies>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
            <scope>provided</scope>
        </dependency>
		  <!-- We depend  on the EJB remote business interfaces  of this application -->
		 <!--<dependency>-->
            <!--<groupId>com.bluelotussoftware</groupId>-->
            <!--<artifactId>scope-examples-ejb-3-server</artifactId>-->
             <!--<version>${project.version}</version>-->
            <!--<type>ejb-client</type>-->
        <!--</dependency>-->

		
		      <!-- JBoss EJB client API jar. We use runtime scope because the EJB client API
         isn't directly used in this example. We just need it in our runtime classpath -->
        <!--<dependency>-->
            <!--<groupId>org.jboss</groupId>-->
            <!--<artifactId>jboss-ejb-client</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!-- client communications with the server use XNIO -->
        <!--<dependency>-->
            <!--<groupId>org.jboss.xnio</groupId>-->
            <!--<artifactId>xnio-api</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>org.jboss.xnio</groupId>-->
            <!--<artifactId>xnio-nio</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; The client needs JBoss remoting to access the server &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.jboss.remoting</groupId>-->
            <!--<artifactId>jboss-remoting</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; Remote EJB accesses can be secured &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.jboss.sasl</groupId>-->
            <!--<artifactId>jboss-sasl</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; data serialization for invoking remote EJBs &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.jboss.marshalling</groupId>-->
            <!--<artifactId>jboss-marshalling-river</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
		
    </dependencies>

    <build>
		<finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <!--<configuration>-->
                    <!--<failOnMissingWebXml>false</failOnMissingWebXml>-->
                <!--</configuration>-->
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
            </plugin>
        </plugins>
        <resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
      </build>

</project>
